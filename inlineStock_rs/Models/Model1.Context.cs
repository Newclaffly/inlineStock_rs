//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace inlineStock_rs.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MATERIAL_STOCKEntities1 : DbContext
    {
        public MATERIAL_STOCKEntities1()
            : base("name=MATERIAL_STOCKEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tb_formula_factor> tb_formula_factor { get; set; }
        public virtual DbSet<tb_information_issue_daily_report> tb_information_issue_daily_report { get; set; }
        public virtual DbSet<tb_log_reason> tb_log_reason { get; set; }
        public virtual DbSet<tb_Master_cut_off> tb_Master_cut_off { get; set; }
        public virtual DbSet<tb_master_issue_daily> tb_master_issue_daily { get; set; }
        public virtual DbSet<tb_Master_MAC_D> tb_Master_MAC_D { get; set; }
        public virtual DbSet<tb_Master_Purpose> tb_Master_Purpose { get; set; }
        public virtual DbSet<Tb_Material_Flag> Tb_Material_Flag { get; set; }
        public virtual DbSet<Tb_member_Inline> Tb_member_Inline { get; set; }
        public virtual DbSet<tb_Monitor_log> tb_Monitor_log { get; set; }
        public virtual DbSet<tb_NEvent> tb_NEvent { get; set; }
        public virtual DbSet<tb_NEvent_CG> tb_NEvent_CG { get; set; }
        public virtual DbSet<tb_NEvent_CSAT> tb_NEvent_CSAT { get; set; }
        public virtual DbSet<tb_NEvent_HTPS> tb_NEvent_HTPS { get; set; }
        public virtual DbSet<tb_NEvent_JUNBS> tb_NEvent_JUNBS { get; set; }
        public virtual DbSet<tb_NEvent_M_OLED> tb_NEvent_M_OLED { get; set; }
        public virtual DbSet<tb_Ntransaction> tb_Ntransaction { get; set; }
        public virtual DbSet<tb_SanpInline> tb_SanpInline { get; set; }
        public virtual DbSet<tb_std_cost_upload> tb_std_cost_upload { get; set; }
        public virtual DbSet<tb_temp_data_assy> tb_temp_data_assy { get; set; }
        public virtual DbSet<tb_temp_junb_csat_target> tb_temp_junb_csat_target { get; set; }
        public virtual DbSet<tb_temp_obe> tb_temp_obe { get; set; }
        public virtual DbSet<tb_UsageAuto_MST> tb_UsageAuto_MST { get; set; }
        public virtual DbSet<tb_wh_std_pack> tb_wh_std_pack { get; set; }
        public virtual DbSet<Bom_access> Bom_access { get; set; }
        public virtual DbSet<tbDailyPlan> tbDailyPlans { get; set; }
        public virtual DbSet<V_MaterialMaster_Biz> V_MaterialMaster_Biz { get; set; }
        public virtual DbSet<V_REQUEST_MAT> V_REQUEST_MAT { get; set; }
        public virtual DbSet<V_REQUEST_MAT_HISTORY> V_REQUEST_MAT_HISTORY { get; set; }
        public virtual DbSet<vw_miscell_summary_email_is> vw_miscell_summary_email_is { get; set; }
        public virtual DbSet<vw_miscell_summary_email_other> vw_miscell_summary_email_other { get; set; }
        public virtual DbSet<vw_test> vw_test { get; set; }
        public virtual DbSet<vwV_RECEIPT> vwV_RECEIPT { get; set; }
        public virtual DbSet<tb_NEvent_ASSY> tb_NEvent_ASSY { get; set; }
    
        public virtual int sp_add_issue_auto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_issue_auto");
        }
    
        public virtual int sp_add_issue_auto_csat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_issue_auto_csat");
        }
    
        public virtual int sp_add_issue_auto_junb()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_issue_auto_junb");
        }
    
        public virtual int Sp_Add_Transaction(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<int> uSAGE, Nullable<int> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(int));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(int));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Transaction", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter);
        }
    
        public virtual int sp_add_usage(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, string cOST_CENTER, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<int> uSAGE, Nullable<int> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(int));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(int));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_usage", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, cOST_CENTERParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter);
        }
    
        public virtual int sp_add_usage_assy(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<int> uSAGE, Nullable<int> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL, string mC_ID)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(int));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(int));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            var mC_IDParameter = mC_ID != null ?
                new ObjectParameter("MC_ID", mC_ID) :
                new ObjectParameter("MC_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_usage_assy", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter, mC_IDParameter);
        }
    
        public virtual int sp_add_usage_cg(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<double> uSAGE, Nullable<double> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL, string cOST_CENTER)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(double));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(double));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_usage_cg", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter, cOST_CENTERParameter);
        }
    
        public virtual int sp_add_usage_csat(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<double> uSAGE, Nullable<double> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL, string cOST_CENTER)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(double));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(double));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_usage_csat", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter, cOST_CENTERParameter);
        }
    
        public virtual int sp_add_usage_junb(string bIZ_NAME, string mATCODE, string iTEM_NUMBER, string mATNAME, string mATGROUP, Nullable<int> sTOCK_WH, string fLAG_MAT, Nullable<int> iSSUE_WH, Nullable<double> uSAGE, Nullable<double> rEMAIN_INLINE, Nullable<System.DateTime> uPDATE_DATE, string uPDATE_BY, string pURPOSE_DETAIL)
        {
            var bIZ_NAMEParameter = bIZ_NAME != null ?
                new ObjectParameter("BIZ_NAME", bIZ_NAME) :
                new ObjectParameter("BIZ_NAME", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var mATNAMEParameter = mATNAME != null ?
                new ObjectParameter("MATNAME", mATNAME) :
                new ObjectParameter("MATNAME", typeof(string));
    
            var mATGROUPParameter = mATGROUP != null ?
                new ObjectParameter("MATGROUP", mATGROUP) :
                new ObjectParameter("MATGROUP", typeof(string));
    
            var sTOCK_WHParameter = sTOCK_WH.HasValue ?
                new ObjectParameter("STOCK_WH", sTOCK_WH) :
                new ObjectParameter("STOCK_WH", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(double));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(double));
    
            var uPDATE_DATEParameter = uPDATE_DATE.HasValue ?
                new ObjectParameter("UPDATE_DATE", uPDATE_DATE) :
                new ObjectParameter("UPDATE_DATE", typeof(System.DateTime));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_usage_junb", bIZ_NAMEParameter, mATCODEParameter, iTEM_NUMBERParameter, mATNAMEParameter, mATGROUPParameter, sTOCK_WHParameter, fLAG_MATParameter, iSSUE_WHParameter, uSAGEParameter, rEMAIN_INLINEParameter, uPDATE_DATEParameter, uPDATE_BYParameter, pURPOSE_DETAILParameter);
        }
    
        public virtual int sp_adjust_eomonth(string mATCODE, string iTEM_NUMBER, string cOST_CENTER, Nullable<double> rEMAIN_INLINE, string fLAG_MAT, string uPDATE_BY)
        {
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(double));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adjust_eomonth", mATCODEParameter, iTEM_NUMBERParameter, cOST_CENTERParameter, rEMAIN_INLINEParameter, fLAG_MATParameter, uPDATE_BYParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_auto_usage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_auto_usage");
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_display_CSAT_Result> sp_display_CSAT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_CSAT_Result>("sp_display_CSAT");
        }
    
        public virtual ObjectResult<sp_display_history_Result> sp_display_history()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_history_Result>("sp_display_history");
        }
    
        public virtual ObjectResult<sp_display_JUNB_Result> sp_display_JUNB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_JUNB_Result>("sp_display_JUNB");
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_export_excel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_export_excel");
        }
    
        public virtual ObjectResult<sp_export_monthly_Result> sp_export_monthly(string process)
        {
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_export_monthly_Result>("sp_export_monthly", processParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_issue_history_Result> sp_issue_history(string material_code)
        {
            var material_codeParameter = material_code != null ?
                new ObjectParameter("material_code", material_code) :
                new ObjectParameter("material_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_issue_history_Result>("sp_issue_history", material_codeParameter);
        }
    
        public virtual ObjectResult<sp_ma_cc_Result> sp_ma_cc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ma_cc_Result>("sp_ma_cc");
        }
    
        public virtual ObjectResult<sp_master_table_Result> sp_master_table()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_master_table_Result>("sp_master_table");
        }
    
        public virtual ObjectResult<sp_material_issue_daily_report_Result> sp_material_issue_daily_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_material_issue_daily_report_Result>("sp_material_issue_daily_report");
        }
    
        public virtual ObjectResult<sp_record_assy_fillter_Result> sp_record_assy_fillter(string matname)
        {
            var matnameParameter = matname != null ?
                new ObjectParameter("matname", matname) :
                new ObjectParameter("matname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_record_assy_fillter_Result>("sp_record_assy_fillter", matnameParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_update_delete_transaction(Nullable<int> mAT_ID, string fLAG_MAT, string mATCODE, string iTEM_NUMBER, string cOST_CENTER, Nullable<int> iSSUE_WH, Nullable<double> uSAGE, string pURPOSE_DETAIL)
        {
            var mAT_IDParameter = mAT_ID.HasValue ?
                new ObjectParameter("MAT_ID", mAT_ID) :
                new ObjectParameter("MAT_ID", typeof(int));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            var iSSUE_WHParameter = iSSUE_WH.HasValue ?
                new ObjectParameter("ISSUE_WH", iSSUE_WH) :
                new ObjectParameter("ISSUE_WH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(double));
    
            var pURPOSE_DETAILParameter = pURPOSE_DETAIL != null ?
                new ObjectParameter("PURPOSE_DETAIL", pURPOSE_DETAIL) :
                new ObjectParameter("PURPOSE_DETAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_delete_transaction", mAT_IDParameter, fLAG_MATParameter, mATCODEParameter, iTEM_NUMBERParameter, cOST_CENTERParameter, iSSUE_WHParameter, uSAGEParameter, pURPOSE_DETAILParameter);
        }
    
        public virtual int sp_update_ma_cc(string mATCODE, string iTEM_NUMBER, string cOST_CENTER)
        {
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_ma_cc", mATCODEParameter, iTEM_NUMBERParameter, cOST_CENTERParameter);
        }
    
        public virtual int sp_update_master_mac_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_master_mac_id");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spReset_Identity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReset_Identity");
        }
    
        public virtual ObjectResult<sp_display_transaction_detail_Result> sp_display_transaction_detail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_transaction_detail_Result>("sp_display_transaction_detail");
        }
    
        public virtual ObjectResult<sp_display_junb_main_Result> sp_display_junb_main()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_junb_main_Result>("sp_display_junb_main");
        }
    
        public virtual int sp_master_cg_update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_master_cg_update");
        }
    
        public virtual ObjectResult<sp_check_master_all_biz_Result> sp_check_master_all_biz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_check_master_all_biz_Result>("sp_check_master_all_biz");
        }
    
        public virtual int sp_insert_reason_log(string mATCODE, string iTEM_NUMBER, string bIZ, string pROCESS, string cOST_CENTER, string rEASON, Nullable<System.DateTime> cREATE_DATE, string cREATE_BY)
        {
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var bIZParameter = bIZ != null ?
                new ObjectParameter("BIZ", bIZ) :
                new ObjectParameter("BIZ", typeof(string));
    
            var pROCESSParameter = pROCESS != null ?
                new ObjectParameter("PROCESS", pROCESS) :
                new ObjectParameter("PROCESS", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            var rEASONParameter = rEASON != null ?
                new ObjectParameter("REASON", rEASON) :
                new ObjectParameter("REASON", typeof(string));
    
            var cREATE_DATEParameter = cREATE_DATE.HasValue ?
                new ObjectParameter("CREATE_DATE", cREATE_DATE) :
                new ObjectParameter("CREATE_DATE", typeof(System.DateTime));
    
            var cREATE_BYParameter = cREATE_BY != null ?
                new ObjectParameter("CREATE_BY", cREATE_BY) :
                new ObjectParameter("CREATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_reason_log", mATCODEParameter, iTEM_NUMBERParameter, bIZParameter, pROCESSParameter, cOST_CENTERParameter, rEASONParameter, cREATE_DATEParameter, cREATE_BYParameter);
        }
    
        public virtual ObjectResult<sp_login_axis_Result> sp_login_axis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_login_axis_Result>("sp_login_axis");
        }
    
        public virtual ObjectResult<sp_chart_issue_daily_report_Result> sp_chart_issue_daily_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_chart_issue_daily_report_Result>("sp_chart_issue_daily_report");
        }
    
        public virtual ObjectResult<sp_search_transaction_axis_Result> sp_search_transaction_axis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_search_transaction_axis_Result>("sp_search_transaction_axis");
        }
    
        public virtual ObjectResult<sp_record_check_inv_report_Result> sp_record_check_inv_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_record_check_inv_report_Result>("sp_record_check_inv_report");
        }
    
        public virtual ObjectResult<sp_record_check_inv_report_f2_Result> sp_record_check_inv_report_f2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_record_check_inv_report_f2_Result>("sp_record_check_inv_report_f2");
        }
    
        public virtual ObjectResult<sp_record_check_inv_report_f1_Result> sp_record_check_inv_report_f1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_record_check_inv_report_f1_Result>("sp_record_check_inv_report_f1");
        }
    
        public virtual int sp_adjust_eomonth_problem(string mATCODE, string iTEM_NUMBER, string cOST_CENTER, Nullable<double> rEMAIN_INLINE, string fLAG_MAT, string uPDATE_BY, Nullable<double> rEMAIN_INLINE_PROBLEM, string cOMMENT_AJDSUST_EOMONTH)
        {
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var cOST_CENTERParameter = cOST_CENTER != null ?
                new ObjectParameter("COST_CENTER", cOST_CENTER) :
                new ObjectParameter("COST_CENTER", typeof(string));
    
            var rEMAIN_INLINEParameter = rEMAIN_INLINE.HasValue ?
                new ObjectParameter("REMAIN_INLINE", rEMAIN_INLINE) :
                new ObjectParameter("REMAIN_INLINE", typeof(double));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            var rEMAIN_INLINE_PROBLEMParameter = rEMAIN_INLINE_PROBLEM.HasValue ?
                new ObjectParameter("REMAIN_INLINE_PROBLEM", rEMAIN_INLINE_PROBLEM) :
                new ObjectParameter("REMAIN_INLINE_PROBLEM", typeof(double));
    
            var cOMMENT_AJDSUST_EOMONTHParameter = cOMMENT_AJDSUST_EOMONTH != null ?
                new ObjectParameter("COMMENT_AJDSUST_EOMONTH", cOMMENT_AJDSUST_EOMONTH) :
                new ObjectParameter("COMMENT_AJDSUST_EOMONTH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adjust_eomonth_problem", mATCODEParameter, iTEM_NUMBERParameter, cOST_CENTERParameter, rEMAIN_INLINEParameter, fLAG_MATParameter, uPDATE_BYParameter, rEMAIN_INLINE_PROBLEMParameter, cOMMENT_AJDSUST_EOMONTHParameter);
        }
    
        public virtual ObjectResult<sp_export_miscell_Result> sp_export_miscell()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_export_miscell_Result>("sp_export_miscell");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_reset_issue_end_month()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_reset_issue_end_month");
        }
    
        public virtual ObjectResult<sp_display_moled_Result> sp_display_moled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_moled_Result>("sp_display_moled");
        }
    
        public virtual int sp_update_inv_check(string iTEM_NUMBER, Nullable<double> aDJUST_VALUE, string aDJUST_REASON)
        {
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var aDJUST_VALUEParameter = aDJUST_VALUE.HasValue ?
                new ObjectParameter("ADJUST_VALUE", aDJUST_VALUE) :
                new ObjectParameter("ADJUST_VALUE", typeof(double));
    
            var aDJUST_REASONParameter = aDJUST_REASON != null ?
                new ObjectParameter("ADJUST_REASON", aDJUST_REASON) :
                new ObjectParameter("ADJUST_REASON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_inv_check", iTEM_NUMBERParameter, aDJUST_VALUEParameter, aDJUST_REASONParameter);
        }
    
        public virtual ObjectResult<sp_running_date_Result> sp_running_date()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_running_date_Result>("sp_running_date");
        }
    
        public virtual int sp_update_schedule(string sC_SELECT_MONTH_VALUE, string sC_SELECT_DAY, string sC_SELECT_YEAR, string sC_UPDATE_BY)
        {
            var sC_SELECT_MONTH_VALUEParameter = sC_SELECT_MONTH_VALUE != null ?
                new ObjectParameter("SC_SELECT_MONTH_VALUE", sC_SELECT_MONTH_VALUE) :
                new ObjectParameter("SC_SELECT_MONTH_VALUE", typeof(string));
    
            var sC_SELECT_DAYParameter = sC_SELECT_DAY != null ?
                new ObjectParameter("SC_SELECT_DAY", sC_SELECT_DAY) :
                new ObjectParameter("SC_SELECT_DAY", typeof(string));
    
            var sC_SELECT_YEARParameter = sC_SELECT_YEAR != null ?
                new ObjectParameter("SC_SELECT_YEAR", sC_SELECT_YEAR) :
                new ObjectParameter("SC_SELECT_YEAR", typeof(string));
    
            var sC_UPDATE_BYParameter = sC_UPDATE_BY != null ?
                new ObjectParameter("SC_UPDATE_BY", sC_UPDATE_BY) :
                new ObjectParameter("SC_UPDATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_schedule", sC_SELECT_MONTH_VALUEParameter, sC_SELECT_DAYParameter, sC_SELECT_YEARParameter, sC_UPDATE_BYParameter);
        }
    
        public virtual ObjectResult<sp_update_schedule_cutoff_Result> sp_update_schedule_cutoff(Nullable<int> iD_SC, string sC_DATE, string sC_UPDATE_BY)
        {
            var iD_SCParameter = iD_SC.HasValue ?
                new ObjectParameter("ID_SC", iD_SC) :
                new ObjectParameter("ID_SC", typeof(int));
    
            var sC_DATEParameter = sC_DATE != null ?
                new ObjectParameter("SC_DATE", sC_DATE) :
                new ObjectParameter("SC_DATE", typeof(string));
    
            var sC_UPDATE_BYParameter = sC_UPDATE_BY != null ?
                new ObjectParameter("SC_UPDATE_BY", sC_UPDATE_BY) :
                new ObjectParameter("SC_UPDATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_update_schedule_cutoff_Result>("sp_update_schedule_cutoff", iD_SCParameter, sC_DATEParameter, sC_UPDATE_BYParameter);
        }
    
        public virtual int sp_insert_schedule_cutoff(string sC_DATE, string sC_CREATE_BY)
        {
            var sC_DATEParameter = sC_DATE != null ?
                new ObjectParameter("SC_DATE", sC_DATE) :
                new ObjectParameter("SC_DATE", typeof(string));
    
            var sC_CREATE_BYParameter = sC_CREATE_BY != null ?
                new ObjectParameter("SC_CREATE_BY", sC_CREATE_BY) :
                new ObjectParameter("SC_CREATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_schedule_cutoff", sC_DATEParameter, sC_CREATE_BYParameter);
        }
    
        public virtual int sp_controls_convert_factor_unit(string mATCODE, string iTEM_NUMBER, string fLAG_MAT, Nullable<double> fACTOR, string uNIT, string pROCEDURE, string uPDATE_BY)
        {
            var mATCODEParameter = mATCODE != null ?
                new ObjectParameter("MATCODE", mATCODE) :
                new ObjectParameter("MATCODE", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var fLAG_MATParameter = fLAG_MAT != null ?
                new ObjectParameter("FLAG_MAT", fLAG_MAT) :
                new ObjectParameter("FLAG_MAT", typeof(string));
    
            var fACTORParameter = fACTOR.HasValue ?
                new ObjectParameter("FACTOR", fACTOR) :
                new ObjectParameter("FACTOR", typeof(double));
    
            var uNITParameter = uNIT != null ?
                new ObjectParameter("UNIT", uNIT) :
                new ObjectParameter("UNIT", typeof(string));
    
            var pROCEDUREParameter = pROCEDURE != null ?
                new ObjectParameter("PROCEDURE", pROCEDURE) :
                new ObjectParameter("PROCEDURE", typeof(string));
    
            var uPDATE_BYParameter = uPDATE_BY != null ?
                new ObjectParameter("UPDATE_BY", uPDATE_BY) :
                new ObjectParameter("UPDATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_controls_convert_factor_unit", mATCODEParameter, iTEM_NUMBERParameter, fLAG_MATParameter, fACTORParameter, uNITParameter, pROCEDUREParameter, uPDATE_BYParameter);
        }
    
        public virtual int sp_Inline_axis_usage_transaction(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inline_axis_usage_transaction", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<sp_Inline_auto_transaction_axis_Result> sp_Inline_auto_transaction_axis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inline_auto_transaction_axis_Result>("sp_Inline_auto_transaction_axis");
        }
    
        public virtual ObjectResult<sp_display_htps_Result> sp_display_htps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_htps_Result>("sp_display_htps");
        }
    
        public virtual ObjectResult<sp_chart_miscell_report_Result> sp_chart_miscell_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_chart_miscell_report_Result>("sp_chart_miscell_report");
        }
    
        public virtual ObjectResult<sp_chart_miscell_report_fillter_Result> sp_chart_miscell_report_fillter(string bIZ)
        {
            var bIZParameter = bIZ != null ?
                new ObjectParameter("BIZ", bIZ) :
                new ObjectParameter("BIZ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_chart_miscell_report_fillter_Result>("sp_chart_miscell_report_fillter", bIZParameter);
        }
    
        public virtual ObjectResult<sp_material_prepareration_type_Result> sp_material_prepareration_type()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_material_prepareration_type_Result>("sp_material_prepareration_type");
        }
    
        public virtual ObjectResult<sp_material_prepareration_material_name_Result> sp_material_prepareration_material_name()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_material_prepareration_material_name_Result>("sp_material_prepareration_material_name");
        }
    
        public virtual ObjectResult<sp_test_Result> sp_test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_test_Result>("sp_test");
        }
    
        public virtual ObjectResult<sp_display_adjust_htps_Result> sp_display_adjust_htps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_adjust_htps_Result>("sp_display_adjust_htps");
        }
    
        public virtual ObjectResult<sp_Inline_auto_usage_ind_ws_Result> sp_Inline_auto_usage_ind_ws()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inline_auto_usage_ind_ws_Result>("sp_Inline_auto_usage_ind_ws");
        }
    
        public virtual ObjectResult<sp_inline_snap_eomonth_Result> sp_inline_snap_eomonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_inline_snap_eomonth_Result>("sp_inline_snap_eomonth");
        }
    }
}
